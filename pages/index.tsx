import Head from "next/head";
import Image from "next/image";
import { useRouter } from "next/router";
import { Fragment, ReactElement, useContext, useEffect } from "react";
import { handleValidateToken } from "../api/auth";
import { getUserInfo } from "../api/user";
import Logo from "../components/Logo";
import { OrderContext } from "../contexts/OrderContext";
import { UserContext } from "../contexts/UserContext";
import { FormLayout } from "../layouts/FormLayout";
import type { NextPageWithLayout } from "./_app";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";
import { useTranslation } from "next-i18next";
import LogoFull from "../components/LogoFull";

const Home: NextPageWithLayout = () => {
  const router = useRouter();
  const { i18n, t } = useTranslation();
  const { user, setUser, setIsAuthenticated } = useContext(UserContext);
  const { orderContext, setOrderContext, setCurrentStep } =
    useContext(OrderContext);
  useEffect(() => {
    setCurrentStep(0);
    validateToken();
    // eslint-disable-next-line
  }, []);

  async function validateToken(): Promise<void> {
    try {
      const token = localStorage.getItem("jolie-token");

      if (token !== null) {
        await handleValidateToken(token).then(async (response) => {
          if (response?.status === "OK") {
            setIsAuthenticated(true);
            if (user === null) {
              await getUserInfo(token).then((response) => {
                if (response?.status === "OK") {
                  setUser(response.data);
                  setOrderContext({
                    ...orderContext,
                    user_id: response.data.user_id,
                  });
                }
              });
            }
          }
        });
      }
    } catch (error: any) {
      console.error(error.message);
    }
  }

  return (
    <Fragment>
      <Head>
        <title>Jolie</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex flex-col flex-grow items-center pt-20 px-8">
        <Image
          src={`${process.env.REACT_APP_S3_PREFIX}/svgs/landing-slogan.svg`}
          alt="landing slogan image"
          width={400}
          height={50}
        />
        <div className="my-4">
          <LogoFull />
        </div>
        <button
          className={`flex min-w-[240px] h-12 px-4 justify-center items-center sticky bottom-0 bg-black text-white shadow-md shadow-black/50`}
          onClick={() => {
            router.push("/order/hairStyle");
          }}
        >
          <b className="font-extrabold">
            {i18n.language === "en" ? (
              <p>CREATE&nbsp;&nbsp;YOUR&nbsp; SHAMPOO</p>
            ) : (
              <p>สร้างแชมพูของคุณเลย!</p>
            )}
          </b>
        </button>
        <Image
          src={`${process.env.REACT_APP_S3_PREFIX}/images/bottle/bottle-all.png`}
          alt={"all bottle"}
          width={600}
          height={400}
          priority
        />
      </div>
    </Fragment>
  );
};

Home.getLayout = function getLayout(page: ReactElement) {
  return <FormLayout>{page}</FormLayout>;
};

export default Home;

export const getStaticProps = async ({ locale }: { locale: string }) => ({
  props: {
    ...(await serverSideTranslations(locale, ["common"])),
  },
});
